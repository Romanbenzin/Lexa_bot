name: Deploy Lexa-bot to Server

on:
  push:
    branches: [ main ]

jobs:
  backup_db:
    name: Create database backup
    runs-on: ubuntu-latest
    steps:
      - name: Add SSH Key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      - name: Execute backup script
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
            # Проверка что контейнер запущен
            if ! docker ps | grep -q ${{ secrets.DB_CONTAINER_NAME }}; then
              echo 'Starting DB container...'
              docker start ${{ secrets.DB_CONTAINER_NAME }}
              sleep 5
            fi
            
            source ${{ secrets.ENV_PATH }}/.env && \
            mkdir -p \"${{ secrets.DEPLOY_PATH }}/database_old\" && \
            docker exec ${{ secrets.DB_CONTAINER_NAME }} pg_dump -U ${{ secrets.DB_USER }} ${{ secrets.DB_NAME }} > \"${{ secrets.DEPLOY_PATH }}/database_old/backup_$(date +%Y-%m-%d_%H-%M-%S).sql\" && \
            find ${{ secrets.DEPLOY_PATH }}/database_old -name '*.sql' -type f -mtime +30 -delete
          "

  deploy:
    name: Deploy krytogo bota
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Add SSH Key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      - name: Deploy via Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
            cd ${{ secrets.DEPLOY_PATH }} &&
            git config --global --add safe.directory ${{ secrets.DEPLOY_PATH }} &&
            docker-compose down && # Без -v, чтобы сохранить тома
            docker system prune -f &&
            git fetch origin &&
            git reset --hard origin/main &&
            docker-compose up --build -d
          "